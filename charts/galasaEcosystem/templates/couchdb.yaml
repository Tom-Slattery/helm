apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ras
  labels:
    name: ras
spec:
  serviceName: ras
  replicas: 1
  selector:
    matchLabels:
      app: ras
  template:
    metadata:
      name: ras
      labels:
        app: ras
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
        longhorn: "true"
        tekton: build
      containers:
      - name: couchdb
        image: docker.galasa.dev/couchdb:2.3.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5984
          name: couchdbport
        - containerPort: 4369
          name: erlangbport
        - containerPort: 9100
        env:
#        - name: COUCHDB_USER
#          value: "admin"
#        - name: COUCHDB_PASSWORD
#          value: "galasa"
#        - name: NODE_NETBIOS_NAME
#          valueFrom:
#            fieldRef:
#              fieldPath: metadata.name
#        - name: NODENAME
#          value: $(NODE_NETBIOS_NAME).ras
#        - name: COUCHDB_SECRET
#          value: "galasacluster"
#        - name: ERL_FLAGS
#          value: '-setcookie "galasacookiemonster"'
        livenessProbe:
          httpGet:
            path: /
            port: 5984
          initialDelaySeconds: 60
          periodSeconds: 60
        volumeMounts:
        - mountPath: /opt/couchdb/data
          name: data-disk
      volumes:
      - name: data-disk
        persistentVolumeClaim:
          claimName: claim-couchdb
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ras
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: data-disk
    spec:
      storageClassName: "longhorn-temp"
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 10Gi
