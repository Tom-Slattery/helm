apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-resource-monitor
  labels:
    app: {{ .Release.Name }}-resource-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-resource-monitor
  template:
    metadata:
      name: {{ .Release.Name }}-resource-monitor
      labels:
        app: {{ .Release.Name }}-resource-monitor
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
        tekton: build
      containers:
      - name: resource-monitor
        image: harbor-cicsk8s.hursley.ibm.com/galasadev/galasa-ibm-boot-embedded-amd64:iss990
        imagePullPolicy: Always
        command: ["java"]
        args: 
        - -jar
        - boot.jar
        - --obr
        - file:galasa.obr
        - --resourcemanagement
        - --bootstrap
        - http://{{ .Release.Name }}-api:8080/bootstrap
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GALASA_CONFIG_STORE
          value: etcd:http://{{ .Release.Name }}-etcd:2379
        - name: GALASA_DYNAMICSTATUS_STORE
          value: etcd:http://{{ .Release.Name }}-etcd:2379
        - name: GALASA_RESULTARCHIVE_STORE
          value: couchdb:http://{{ .Release.Name }}-couchdb:5984
        - name: GALASA_CREDENTIALS_STORE
          value: etcd:http://{{ .Release.Name }}-etcd:2379
        ports:
        - containerPort: 9010
          name: metrics
        - containerPort: 9011
          name: health
        livenessProbe:
          httpGet:
            path: /
            port: 9011
          initialDelaySeconds: 5
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 9011
          initialDelaySeconds: 5
          periodSeconds: 10
